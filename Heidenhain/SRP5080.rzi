#
# Copyright (c) 2024 Gonzalo J. Carracedo <BatchDrake@gmail.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

parameter SRP5080_SYSTEM_ACCURACY    = 0.0007;        # deg - PLEASE REVIEW
parameter SRP5080_REPEATABILITY      = 8.3333333e-05; # deg
parameter SRP5080_RMS_POSITION_NOISE = 1.9444444e-06; # deg
parameter SRP5080_AXIS_WOBBLE        = 0.00019444444; # deg
parameter SRP5080_AXIAL_RUNOUT       = 1e-06;         # m   - PLEASE REVIEW
parameter SRP5080_RADIAL_RUNOUT      = 0.55e-6;       # m   - PLEASE REVIEW
parameter SRP5080_HEIGHT             = 46e-3;         # m

import "scale.rzi";

element SRP5080 {
  script "SRP5080.py";
  dof     theta = 0;

  rotate(90, 0, 1, 0) StlMesh bearing(file = "SRP5080_Bearing.stl", red = 1, green = .65, blue = 0);
  
  rotate(theta, 0, 0, 1) {
    # Model runout
    translate(
      dx = spc_scale * SRP5080_RADIAL_RUNOUT * SRP5080_radial_runout(theta),
      dz = spc_scale * SRP5080_AXIAL_RUNOUT * SRP5080_axial_runout(theta)) {
      # Model wobbling
      rotate(ang_scale * SRP5080_AXIS_WOBBLE * SRP5080_wobble(theta), 0, 1, 0) {
        rotate(90, 0, 1, 0) StlMesh shaft(file = "SRP5080_Shaft.stl", red = 1, green = .65, blue = 0);
        translate(dz = SRP5080_HEIGHT) port topMount;
      }
    }
  }
}

element SRP5080Rev {
  script "SRP5080.py";
  dof     theta = 0;

  translate(dz = -SRP5080_HEIGHT) {
    # Model wobble
    rotate(-ang_scale * SRP5080_AXIS_WOBBLE * SRP5080_wobble(theta), 0, 1, 0) {
      # Model runout
      translate(
        dx = -spc_scale * SRP5080_RADIAL_RUNOUT * SRP5080_radial_runout(theta),
        dz = -spc_scale * SRP5080_AXIAL_RUNOUT * SRP5080_axial_runout(theta)) {
        rotate(-theta, 0, 0, 1) {
          rotate(90, 0, 1, 0) StlMesh bearing(file = "SRP5080_Bearing.stl", red = 1, green = .65, blue = 0);
          rotate(180, 0, 1, 0) port bottomMount;
        }
      }
    }

    rotate(90, 0, 1, 0) StlMesh shaft(file = "SRP5080_Shaft.stl", red = 1, green = .65, blue = 0);
  }
}
